import { useState, createContext, ReactNode } from "react";

interface Settings {
  pathSteps: number;
  tolerance: number;
  precision: number;
  svgInput: string;
}
interface SettingsContextProps {
  settings: Settings;
  updateSettings: (newSettings: Partial<Settings>) => void;
}
const SettingsContext = createContext<SettingsContextProps | undefined>(
  undefined
);

interface Props {
  children: ReactNode;
}
const SettingsProvider = ({ children }: Props) => {
  const [settings, setSettings] = useState({
    pathSteps: 100,
    tolerance: 2.5,
    precision: 5,
    svgInput:
      '<svg width="489.1" height="72.701" viewBox="0 0 489.1 72.701" xmlns="http://www.w3.org/2000/svg"><g id="svgGroup" stroke-linecap="round" fill-rule="evenodd" font-size="9pt" stroke="#000" stroke-width="0.25mm" fill="#000" style="stroke:#000;stroke-width:0.25mm;fill:#000"><path d="M 283.7 5.6 L 262.9 72 L 260.8 72 L 241.9 2 L 244.3 2 L 261.9 67.9 L 282.5 2 L 284.9 2 L 305.5 67.9 L 323.1 2 L 325.6 2 L 306.6 72 L 304.5 72 L 283.7 5.6 Z M 0 72 L 0 2 L 2.2 2 L 2.2 35 L 46.9 35 L 46.9 2 L 49.1 2 L 49.1 72 L 46.9 72 L 46.9 37 L 2.2 37 L 2.2 72 L 0 72 Z M 487 36.6 L 486.9 36.9 L 486.9 0 L 489.1 0 L 489.1 72 L 486.9 72 L 486.9 57.5 Q 485 64 479.6 68.35 A 19.342 19.342 0 0 1 470.737 72.296 A 26.663 26.663 0 0 1 466 72.7 Q 459 72.7 453.75 69.55 A 21.154 21.154 0 0 1 445.784 60.96 A 25.345 25.345 0 0 1 445.6 60.6 A 26.859 26.859 0 0 1 443.179 53.007 A 36.121 36.121 0 0 1 442.7 47 A 35.374 35.374 0 0 1 443.295 40.352 A 26.153 26.153 0 0 1 445.6 33.45 Q 448.5 27.7 453.75 24.5 A 21.834 21.834 0 0 1 462.405 21.526 A 27.861 27.861 0 0 1 466 21.3 A 27.98 27.98 0 0 1 471.931 21.893 Q 476.646 22.916 480 25.7 Q 485.3 30.1 487 36.6 Z M 108.8 47 L 65.9 47 Q 66 54 68.65 59.35 A 21.554 21.554 0 0 0 72.744 65.12 A 19.579 19.579 0 0 0 75.95 67.7 A 18.852 18.852 0 0 0 85.121 70.653 A 23.041 23.041 0 0 0 86.6 70.7 A 25.755 25.755 0 0 0 92.899 69.961 A 20.473 20.473 0 0 0 98.75 67.5 A 18.677 18.677 0 0 0 106.295 58.412 A 22.115 22.115 0 0 0 106.3 58.4 L 108.1 59.1 Q 105.6 65.6 99.95 69.15 Q 94.3 72.7 86.6 72.7 A 23.713 23.713 0 0 1 79.841 71.769 A 20.192 20.192 0 0 1 74.65 69.4 A 22.072 22.072 0 0 1 67.164 61.283 A 26.549 26.549 0 0 1 66.6 60.2 A 27.862 27.862 0 0 1 64.108 52.086 A 36.794 36.794 0 0 1 63.7 46.5 Q 63.7 39.1 66.65 33.4 A 22.827 22.827 0 0 1 72.098 26.437 A 21.776 21.776 0 0 1 74.75 24.5 Q 79.9 21.3 86.6 21.3 A 24.524 24.524 0 0 1 93.313 22.189 A 20.975 20.975 0 0 1 98 24.15 Q 103 27 105.9 31.85 A 20.585 20.585 0 0 1 108.729 40.995 A 25.24 25.24 0 0 1 108.8 42.9 Q 108.8 43.526 108.84 44.472 A 72 72 0 0 0 108.85 44.7 A 16.395 16.395 0 0 1 108.867 45.444 Q 108.867 46.2 108.8 47 Z M 174.412 71.719 A 26.229 26.229 0 0 0 181.7 72.7 A 28.631 28.631 0 0 0 184.645 72.552 A 23.059 23.059 0 0 0 193.95 69.6 A 21.669 21.669 0 0 0 196.708 67.707 A 22.598 22.598 0 0 0 202.4 60.75 A 25.051 25.051 0 0 0 204.907 53.569 A 34.598 34.598 0 0 0 205.5 47 Q 205.5 39.1 202.4 33.3 A 26.19 26.19 0 0 0 202.104 32.762 A 21.871 21.871 0 0 0 193.95 24.4 Q 188.6 21.3 181.7 21.3 A 28.934 28.934 0 0 0 179.114 21.414 A 23.473 23.473 0 0 0 169.4 24.4 A 21.699 21.699 0 0 0 166.355 26.509 A 22.869 22.869 0 0 0 160.85 33.3 A 25.096 25.096 0 0 0 158.347 40.272 A 33.407 33.407 0 0 0 157.7 47 A 34.371 34.371 0 0 0 158.24 53.239 A 24.937 24.937 0 0 0 160.85 60.75 A 26.447 26.447 0 0 0 160.899 60.84 A 22.294 22.294 0 0 0 169.4 69.6 A 22.572 22.572 0 0 0 174.412 71.719 Z M 347.512 71.719 A 26.229 26.229 0 0 0 354.8 72.7 A 28.631 28.631 0 0 0 357.745 72.552 A 23.059 23.059 0 0 0 367.05 69.6 A 21.669 21.669 0 0 0 369.808 67.707 A 22.598 22.598 0 0 0 375.5 60.75 A 25.051 25.051 0 0 0 378.007 53.569 A 34.598 34.598 0 0 0 378.6 47 Q 378.6 39.1 375.5 33.3 A 26.19 26.19 0 0 0 375.204 32.762 A 21.871 21.871 0 0 0 367.05 24.4 Q 361.7 21.3 354.8 21.3 A 28.934 28.934 0 0 0 352.214 21.414 A 23.473 23.473 0 0 0 342.5 24.4 A 21.699 21.699 0 0 0 339.455 26.509 A 22.869 22.869 0 0 0 333.95 33.3 A 25.096 25.096 0 0 0 331.447 40.272 A 33.407 33.407 0 0 0 330.8 47 A 34.371 34.371 0 0 0 331.34 53.239 A 24.937 24.937 0 0 0 333.95 60.75 A 26.447 26.447 0 0 0 333.999 60.84 A 22.294 22.294 0 0 0 342.5 69.6 A 22.572 22.572 0 0 0 347.512 71.719 Z M 392.4 72 L 392.4 22 L 394.6 22 L 394.6 34 Q 395.8 30.2 398.75 27.1 A 18.058 18.058 0 0 1 405.884 22.524 A 20.905 20.905 0 0 1 405.95 22.5 A 16.066 16.066 0 0 1 410.657 21.616 Q 412.418 21.543 414.321 21.807 A 24.56 24.56 0 0 1 415.5 22 L 415.5 24.1 A 18.567 18.567 0 0 0 412.625 23.672 Q 409.83 23.484 407.3 24.25 Q 403.5 25.4 400.65 28.2 A 18.578 18.578 0 0 0 397.019 33.279 A 22.526 22.526 0 0 0 396.2 35.15 A 24.134 24.134 0 0 0 394.677 42.092 A 28.595 28.595 0 0 0 394.6 44.2 L 394.6 72 L 392.4 72 Z M 122.6 72 L 122.6 0.9 L 124.8 0.9 L 124.8 72 L 122.6 72 Z M 141.9 72 L 141.9 0.9 L 144.1 0.9 L 144.1 72 L 141.9 72 Z M 426.9 72 L 426.9 0.9 L 429.1 0.9 L 429.1 72 L 426.9 72 Z M 181.7 70.7 Q 187.3 70.7 192.25 68.15 A 19.14 19.14 0 0 0 199.406 61.697 A 23.531 23.531 0 0 0 200.25 60.35 A 21.061 21.061 0 0 0 202.489 54.595 Q 203.097 52.031 203.249 49.041 A 40.2 40.2 0 0 0 203.3 47 Q 203.3 38.9 200.25 33.65 A 20.895 20.895 0 0 0 196.121 28.511 A 18.507 18.507 0 0 0 192.25 25.85 Q 187.3 23.3 181.7 23.3 Q 176.1 23.3 171.15 25.85 A 19.37 19.37 0 0 0 164.114 32.075 A 23.818 23.818 0 0 0 163.1 33.65 Q 160 38.9 160 47 A 34.82 34.82 0 0 0 160.436 52.674 Q 160.947 55.764 162.056 58.304 A 18.909 18.909 0 0 0 163.1 60.35 A 21.34 21.34 0 0 0 167.173 65.402 A 18.73 18.73 0 0 0 171.15 68.15 Q 176.1 70.7 181.7 70.7 Z M 354.8 70.7 Q 360.4 70.7 365.35 68.15 A 19.14 19.14 0 0 0 372.506 61.697 A 23.531 23.531 0 0 0 373.35 60.35 A 21.061 21.061 0 0 0 375.589 54.595 Q 376.197 52.031 376.349 49.041 A 40.2 40.2 0 0 0 376.4 47 Q 376.4 38.9 373.35 33.65 A 20.895 20.895 0 0 0 369.221 28.511 A 18.507 18.507 0 0 0 365.35 25.85 Q 360.4 23.3 354.8 23.3 Q 349.2 23.3 344.25 25.85 A 19.37 19.37 0 0 0 337.214 32.075 A 23.818 23.818 0 0 0 336.2 33.65 Q 333.1 38.9 333.1 47 A 34.82 34.82 0 0 0 333.536 52.674 Q 334.047 55.764 335.156 58.304 A 18.909 18.909 0 0 0 336.2 60.35 A 21.34 21.34 0 0 0 340.273 65.402 A 18.73 18.73 0 0 0 344.25 68.15 Q 349.2 70.7 354.8 70.7 Z M 444.9 47 Q 444.9 57.9 450.6 64.3 A 18.776 18.776 0 0 0 462.784 70.511 A 26.541 26.541 0 0 0 466 70.7 Q 472.3 70.7 477 67.7 A 19.886 19.886 0 0 0 483.967 60.01 A 23.823 23.823 0 0 0 484.3 59.35 A 25.471 25.471 0 0 0 486.534 52.018 A 33.209 33.209 0 0 0 486.9 47 A 32.7 32.7 0 0 0 486.302 40.606 A 25.244 25.244 0 0 0 484.35 34.65 A 20.385 20.385 0 0 0 479.953 28.522 A 19.167 19.167 0 0 0 477.1 26.3 A 18.981 18.981 0 0 0 469.466 23.537 A 24.555 24.555 0 0 0 466 23.3 A 23.728 23.728 0 0 0 459.16 24.238 A 18.292 18.292 0 0 0 450.6 29.7 Q 445.189 35.775 444.915 45.905 A 40.402 40.402 0 0 0 444.9 47 Z M 65.9 45 L 106.6 45 A 30.655 30.655 0 0 0 106.615 44.043 Q 106.615 38.23 104.35 33.7 Q 101.9 28.8 97.35 26.05 A 18.903 18.903 0 0 0 90.358 23.575 A 24.797 24.797 0 0 0 86.6 23.3 A 20.57 20.57 0 0 0 79.819 24.394 A 18.748 18.748 0 0 0 76.2 26.1 Q 71.6 28.9 68.85 33.8 A 23.021 23.021 0 0 0 66.159 41.937 A 28.436 28.436 0 0 0 65.9 45 Z" vector-effect="non-scaling-stroke"/></g></svg>',
  });
  const updateSettings = (newSettings: Partial<Settings>) => {
    setSettings({ ...settings, ...newSettings });
  };
  return (
    <SettingsContext.Provider value={{ settings, updateSettings }}>
      {children}
    </SettingsContext.Provider>
  );
};

export { SettingsProvider, SettingsContext };
